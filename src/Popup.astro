---
import "@/styles.css"
import { Icon } from "astro-icon/components"

export interface Props {
  // --- Element IDs ---
  triggerId: string
  popupId: string
  contentId: string
  closeBtnId: string

  // --- Content ---
  title: string
  triggerAriaLabel: string
  triggerIcon: string // Icon name e.g., 'lucide:settings'
}

const {
  triggerId,
  popupId,
  contentId,
  closeBtnId,
  title,
  triggerAriaLabel,
  triggerIcon,
} = Astro.props
---

<!-- 1. The Trigger Button -->
<button
  aria-label={triggerAriaLabel}
  id={triggerId}
  class="shadow-md bg-surface p-1.5 rounded-md hover:bg-highlight-med"
>
  <Icon name={triggerIcon} class="size-4.5" />
</button>

<!-- 2. The Popup Structure -->
<div
  id={popupId}
  style="content-visibility: auto"
  class="popup backdrop-blur-[1px] fixed inset-0 flex items-center z-[50] justify-center bg-base/80 invisible pointer-events-none opacity-0 transition-opacity duration-300 ease-in-out"
>
  <div
    id={contentId}
    class="relative bg-overlay w-[90vw] max-w-[500px] rounded-lg shadow-xl p-6 m-4 max-h-[80vh] overflow-y-auto transform -translate-y-full transition-transform duration-300 ease-in-out"
  >
    <!-- Header -->
    <div class="flex justify-between items-center mb-3">
      <h1 class="text-2xl font-semibold text-text">{title}</h1>
      <button
        id={closeBtnId}
        aria-label={`Close ${title}`}
        class="text-text hover:text-iris transition-colors"
      >
        <Icon name="ph:x-bold" class="size-6" />
      </button>
    </div>

    <slot />
  </div>
</div>

<!-- 4. The Common JavaScript -->
<script
  define:vars={{ triggerId, popupId, contentId, closeBtnId }}
  is:inline
  defer
  async
>
  const triggerButton = document.getElementById(triggerId);
  const popup = document.getElementById(popupId);
  const popupContent = document.getElementById(contentId);
  const closeButton = document.getElementById(closeBtnId);

  if (!triggerButton || !popup || !popupContent || !closeButton) {
    console.error("One or more popup elements are missing from the DOM.");
  } else {
    function openPopup() {
      popup.classList.remove("invisible", "pointer-events-none");
      popup.classList.add("opacity-100");
      popupContent.classList.remove("-translate-y-full");
      popupContent.classList.add("translate-y-0");
      // Dispatch a custom event when the popup opens
      document.dispatchEvent(
        new CustomEvent("popup-opened", { detail: { popupId } }),
      );
    }

    function closePopup() {
      popup.classList.remove("opacity-100");
      popup.classList.add("invisible", "pointer-events-none");
      popupContent.classList.remove("translate-y-0");
      popupContent.classList.add("-translate-y-full");
      // Dispatch a custom event when the popup closes
      document.dispatchEvent(
        new CustomEvent("popup-closed", { detail: { popupId } }),
      );
    }

    triggerButton.addEventListener("click", openPopup);
    closeButton.addEventListener("click", closePopup);

    popup.addEventListener("click", (event) => {
      if (event.target === popup) {
        closePopup();
      }
    });

    window.addEventListener("keydown", (event) => {
      if (event.key === "Escape" && !popup.classList.contains("invisible")) {
        event.preventDefault();
        closePopup();
      }
    });
  }
</script>

<!-- 5. Common Styling -->
<style is:global>
  .overflow-y-auto::-webkit-scrollbar {
    width: 8px;
  }
  .overflow-y-auto::-webkit-scrollbar-track {
    background: transparent;
  }
  .overflow-y-auto::-webkit-scrollbar-thumb {
    background: #6b7280;
    border-radius: 4px;
  }
  .overflow-y-auto::-webkit-scrollbar-thumb:hover {
    background: #9ca3af;
  }
</style>
